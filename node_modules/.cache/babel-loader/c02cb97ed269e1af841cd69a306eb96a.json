{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/haitham/Desktop/Capstone/TTP-Capstone-Frontend/src/screens/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { logout, update } from '../actions/userActions'; //import { listMyOrders } from '../actions/orderActions';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Profile(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const handleLogout = () => {\n    dispatch(logout());\n    props.history.push(\"/signin\");\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(update({\n      userId: userInfo._id,\n      email,\n      name,\n      password\n    }));\n  };\n\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading,\n    success,\n    error\n  } = userUpdate; //const myOrderList = useSelector(state => state.myOrderList);\n  //const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n\n  useEffect(() => {\n    if (userInfo) {\n      console.log(userInfo.name);\n      setEmail(userInfo.email);\n      setName(userInfo.name);\n      setPassword(userInfo.password);\n    } //dispatch(listMyOrders());\n\n\n    return () => {};\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"form-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"User Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 27\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Profile Saved Successfully.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: name,\n                type: \"name\",\n                name: \"name\",\n                id: \"name\",\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: email,\n                type: \"email\",\n                name: \"email\",\n                id: \"email\",\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: password,\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"button primary\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleLogout,\n                className: \"button secondary full-width\",\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Profile, \"tYnxgmEvd1bKevzkYNZ1tOi3b+A=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/haitham/Desktop/Capstone/TTP-Capstone-Frontend/src/screens/Profile.js"],"names":["React","useState","useEffect","Link","logout","update","useDispatch","useSelector","Profile","props","name","setName","password","setPassword","email","setEmail","dispatch","userSignin","state","userInfo","handleLogout","history","push","submitHandler","e","preventDefault","userId","_id","userUpdate","loading","success","error","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { logout, update } from '../actions/userActions';\n//import { listMyOrders } from '../actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Profile(props) {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { userInfo } = userSignin;\n  const handleLogout = () => {\n    dispatch(logout());\n    props.history.push(\"/signin\");\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(update({ userId: userInfo._id, email, name, password }))\n  }\n  const userUpdate = useSelector(state => state.userUpdate);\n  const { loading, success, error } = userUpdate;\n\n  //const myOrderList = useSelector(state => state.myOrderList);\n  //const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n  useEffect(() => {\n    if (userInfo) {\n      console.log(userInfo.name)\n      setEmail(userInfo.email);\n      setName(userInfo.name);\n      setPassword(userInfo.password);\n    }\n    //dispatch(listMyOrders());\n    return () => {\n\n    };\n  }, [userInfo])\n\n  return <div className=\"profile\">\n    <div className=\"profile-info\">\n      <div className=\"form\">\n        <form onSubmit={submitHandler} >\n          <ul className=\"form-container\">\n            <li>\n              <h2>User Profile</h2>\n            </li>\n            <li>\n              {loading && <div>Loading...</div>}\n              {error && <div>{error}</div>}\n              {success && <div>Profile Saved Successfully.</div>}\n            </li>\n            <li>\n              <label htmlFor=\"name\">\n                Name\n          </label>\n              <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\n              </input>\n            </li>\n            <li>\n              <label htmlFor=\"email\">\n                Email\n          </label>\n              <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\n              </input>\n            </li>\n            <li>\n              <label htmlFor=\"password\">Password</label>\n              <input value={password} type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\n              </input>\n            </li>\n\n            <li>\n              <button type=\"submit\" className=\"button primary\">Update</button>\n            </li>\n            <li>\n              <button type=\"button\" onClick={handleLogout} className=\"button secondary full-width\">Logout</button>\n            </li>\n\n          </ul>\n        </form>\n      </div>\n    </div>\n  </div>\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}