{"ast":null,"code":"import { FETCH_PRODUCT_PAGE_REQUEST, FETCH_PRODUCT_PAGE_SUCCESS, FETCH_PRODUCT_REQUEST, FETCH_PRODUCT_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_REVIEW_SAVE_REQUEST, PRODUCT_REVIEW_SAVE_FAIL, PRODUCT_REVIEW_SAVE_SUCCESS } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\nexport const listProducts = (page, searchKeyword, sortOrder) => dispatch => {\n  dispatch({\n    type: FETCH_PRODUCT_PAGE_REQUEST\n  });\n  fetch('http://localhost:5000/api/products?page=' + page + '&searchKeyword=' + searchKeyword + '&sortOrder=' + sortOrder).then(res => res.json()).then(products => dispatch({\n    type: FETCH_PRODUCT_PAGE_SUCCESS,\n    payload: products\n  })).catch(error => console.log(error));\n};\nexport const listAllProducts = () => dispatch => {\n  dispatch({\n    type: FETCH_PRODUCT_REQUEST\n  });\n  fetch('http://localhost:5000/api/products').then(res => res.json()).then(products => dispatch({\n    type: FETCH_PRODUCT_SUCCESS,\n    payload: products\n  })).catch(error => console.log(error));\n};\nexport const detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const saveProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo: {\n          token\n        }\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_REQUEST,\n      payload: review\n    });\n    const {\n      data\n    } = await axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // report error\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/haitham/Desktop/Capstone/TTP-Capstone-Frontend/src/actions/productActions.js"],"names":["FETCH_PRODUCT_PAGE_REQUEST","FETCH_PRODUCT_PAGE_SUCCESS","FETCH_PRODUCT_REQUEST","FETCH_PRODUCT_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_REVIEW_SAVE_REQUEST","PRODUCT_REVIEW_SAVE_FAIL","PRODUCT_REVIEW_SAVE_SUCCESS","axios","Axios","listProducts","page","searchKeyword","sortOrder","dispatch","type","fetch","then","res","json","products","payload","catch","error","console","log","listAllProducts","detailsProduct","productId","data","get","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","saveProductReview","review"],"mappings":"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","sourcesContent":["import {\n  FETCH_PRODUCT_PAGE_REQUEST,\n  FETCH_PRODUCT_PAGE_SUCCESS,\n  FETCH_PRODUCT_REQUEST,\n  FETCH_PRODUCT_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_SAVE_REQUEST,\n  PRODUCT_SAVE_SUCCESS,\n  PRODUCT_SAVE_FAIL,\n  PRODUCT_REVIEW_SAVE_REQUEST,\n  PRODUCT_REVIEW_SAVE_FAIL,\n  PRODUCT_REVIEW_SAVE_SUCCESS,} from '../constants/productConstants';\n  import axios from 'axios';\n  import Axios from 'axios';\n\nexport const listProducts = (page, searchKeyword, sortOrder) => dispatch => {\ndispatch({\n type: FETCH_PRODUCT_PAGE_REQUEST\n});\nfetch('http://localhost:5000/api/products?page='+page+\n '&searchKeyword='+searchKeyword+'&sortOrder='+sortOrder)\n   .then(res => res.json())\n   .then(products =>\n     dispatch({\n       type: FETCH_PRODUCT_PAGE_SUCCESS,\n       payload: products\n     })\n   ).catch(error => console.log(error));\n}\n\nexport const listAllProducts = () => dispatch => {\n dispatch({\n type: FETCH_PRODUCT_REQUEST\n });\n fetch('http://localhost:5000/api/products')\n     .then(res => res.json())\n     .then(products =>\n       dispatch({\n         type: FETCH_PRODUCT_SUCCESS,\n         payload: products\n       })\n     ).catch(error => console.log(error));\n }\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    const { data } = await axios.get('/api/products/' + productId);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n  }\n};\n\nexport const saveProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    if (!product._id) {\n      const { data } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token,\n        },\n      });\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    } else {\n      const { data } = await Axios.put(\n        '/api/products/' + product._id,\n        product,\n        {\n          headers: {\n            Authorization: 'Bearer ' + userInfo.token,\n          },\n        }\n      );\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    }\n  } catch (error) {\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\n  }\n};\n\nexport const saveProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo: { token },\n      },\n    } = getState();\n    dispatch({ type: PRODUCT_REVIEW_SAVE_REQUEST, payload: review });\n    const { data } = await axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n    );\n    dispatch({ type: PRODUCT_REVIEW_SAVE_SUCCESS, payload: data });\n  } catch (error) {\n    // report error\n    dispatch({ type: PRODUCT_REVIEW_SAVE_FAIL, payload: error.message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}